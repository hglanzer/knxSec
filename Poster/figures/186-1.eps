%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 241 156 
%%LanguageLevel: 3
%%Creator: CorelDRAW
%%Title: AClogoshort.eps
%%CreationDate: Wed Feb 25 04:16:00 2015
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 3 def
%Build: CorelDRAW Version 14.0.0.567
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
28.71213 19.23534 216.60350 33.71924 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
35.23521 19.23534 m
34.26066 19.23534 33.37455 19.39465 32.57405 19.71524 c
31.77326 20.03499 31.08699 20.50243 30.51326 21.11556 c
29.93981 21.72898 29.49619 22.48583 29.18268 23.38668 c
28.86945 24.28724 28.71213 25.31679 28.71213 26.47786 c
28.71213 27.63780 28.88901 28.66847 29.24306 29.56819 C
29.59597 30.46876 30.07304 31.22561 30.67370 31.83902 c
31.27351 32.45216 31.97424 32.91987 32.77389 33.23934 c
33.57439 33.56022 34.42819 33.71924 35.33528 33.71924 c
35.90787 33.71924 36.42520 33.67984 36.88554 33.59962 c
37.34561 33.51940 37.74557 33.42671 38.08602 33.31956 c
38.42532 33.21326 38.70255 33.10611 38.91600 32.99981 c
39.12945 32.89266 39.27600 32.81244 39.35622 32.75943 C
38.79609 31.15899 L
38.67647 31.23921 38.50243 31.32567 38.27565 31.41950 c
38.04860 31.51191 37.79235 31.60573 37.50491 31.69956 c
37.21861 31.79225 36.90539 31.86907 36.56494 31.92945 c
36.22535 31.98898 35.88180 32.01902 35.53512 32.01902 c
34.80094 32.01902 34.14104 31.89203 33.55483 31.63918 c
32.96750 31.38605 32.46661 31.01839 32.05332 30.53849 c
31.64003 30.05858 31.32340 29.47550 31.10372 28.78838 c
30.88290 28.10098 30.77376 27.33052 30.77376 26.47786 c
30.77376 25.65014 30.86957 24.89726 31.06318 24.21638 c
31.25679 23.53635 31.54734 22.95326 31.93370 22.46598 c
32.32091 21.97871 32.80394 21.60283 33.38391 21.33524 c
33.96387 21.06879 34.64164 20.93556 35.41436 20.93556 c
36.30869 20.93556 37.04910 21.02939 37.63531 21.21562 c
38.22236 21.40214 38.66287 21.56967 38.95654 21.71537 C
39.45628 20.11521 L
39.36246 20.04860 39.19606 19.96526 38.95654 19.86520 c
38.71587 19.76513 38.41597 19.66847 38.05597 19.57465 c
37.69569 19.48195 37.27502 19.40202 36.79483 19.33512 c
36.31493 19.26850 35.79534 19.23534 35.23521 19.23534 c
@c
40.89940 26.47786 m
40.89940 27.66472 41.07628 28.71128 41.43033 29.61808 c
41.78324 30.52488 42.26343 31.28202 42.87033 31.88891 c
43.47723 32.49609 44.18419 32.95304 44.99121 33.25918 c
45.79824 33.56646 46.65515 33.71924 47.56195 33.71924 c
48.45543 33.71924 49.29959 33.56646 50.09301 33.25918 c
50.88643 32.95304 51.58318 32.49609 52.18384 31.88891 c
52.78365 31.28202 53.26044 30.52488 53.61449 29.61808 c
53.96740 28.71128 54.14428 27.66472 54.14428 26.47786 c
54.14428 25.29099 53.96740 24.24331 53.61449 23.33650 c
53.26044 22.42970 52.78365 21.67285 52.18384 21.06567 c
51.58318 20.45877 50.88643 20.00154 50.09301 19.69540 c
49.29959 19.38841 48.45543 19.23534 47.56195 19.23534 c
46.65515 19.23534 45.79824 19.38841 44.99121 19.69540 c
44.18419 20.00154 43.47723 20.45877 42.87033 21.06567 c
42.26343 21.67285 41.78324 22.42970 41.43033 23.33650 c
41.07628 24.24331 40.89940 25.29099 40.89940 26.47786 c
@c
42.94006 26.47786 m
42.94006 25.63767 43.04721 24.87345 43.26066 24.18605 c
43.47411 23.50006 43.77713 22.91584 44.17087 22.43594 c
44.56431 21.95603 45.04422 21.58639 45.61172 21.32589 c
46.17808 21.06567 46.81531 20.93556 47.52227 20.93556 c
48.22951 20.93556 48.86249 21.06567 49.42261 21.32589 c
49.98274 21.58639 50.45953 21.95603 50.85326 22.43594 c
51.24671 22.91584 51.54973 23.50006 51.76318 24.18605 c
51.97663 24.87345 52.08378 25.63767 52.08378 26.47786 c
52.08378 27.31805 51.97663 28.08142 51.76318 28.76854 c
51.54973 29.45452 51.24671 30.03874 50.85326 30.51865 c
50.45953 30.99883 49.98274 31.36932 49.42261 31.62869 c
48.86249 31.88891 48.22951 32.01902 47.52227 32.01902 c
46.81531 32.01902 46.17808 31.88891 45.61172 31.62869 C
45.04422 31.36932 44.56431 30.99883 44.17087 30.51865 c
43.77713 30.03874 43.47411 29.45452 43.26066 28.76854 c
43.04721 28.08142 42.94006 27.31805 42.94006 26.47786 c
@c
63.03005 21.45628 m
62.89682 21.77575 62.72079 22.18280 62.49997 22.67631 c
62.28028 23.17011 62.04302 23.70302 61.78989 24.27676 c
61.53704 24.85049 61.26633 25.44094 60.97975 26.04671 c
60.69260 26.65389 60.42274 27.22762 60.16989 27.76791 c
59.91591 28.30819 59.67950 28.79150 59.45868 29.21839 c
59.23899 29.64529 59.06211 29.97213 58.92860 30.19918 C
58.78205 28.62482 58.66214 26.92148 58.56860 25.08690 c
58.47591 23.25317 58.39569 21.40214 58.32907 19.53524 C
56.42787 19.53524 L
56.48202 20.73572 56.54126 21.94554 56.60787 23.16671 c
56.67449 24.38702 56.75159 25.58750 56.83805 26.76728 c
56.92535 27.94791 57.01805 29.09849 57.11811 30.21874 c
57.21817 31.33928 57.32844 32.39915 57.44806 33.39978 C
59.14942 33.39978 L
59.50970 32.81244 59.89606 32.11909 60.30935 31.31943 c
60.72265 30.51865 61.13594 29.68157 61.54951 28.80794 c
61.96394 27.93458 62.36362 27.06094 62.74998 26.18731 c
63.13720 25.31367 63.49011 24.51742 63.81099 23.79685 C
64.13046 24.51742 64.48450 25.31367 64.87087 26.18731 c
65.25808 27.06094 65.65805 27.93458 66.07134 28.80794 c
66.48463 29.68157 66.89792 30.51865 67.31150 31.31943 c
67.72479 32.11909 68.11200 32.81244 68.47228 33.39978 C
70.17250 33.39978 L
70.62661 28.93209 70.96592 24.31020 71.19298 19.53524 C
69.29291 19.53524 L
69.22630 21.40214 69.14608 23.25317 69.05225 25.08690 c
68.95871 26.92148 68.83880 28.62482 68.69197 30.19918 C
68.55874 29.97213 68.38186 29.64529 68.16217 29.21839 c
67.94249 28.79150 67.70494 28.30819 67.45209 27.76791 c
67.19783 27.22762 66.92825 26.65389 66.64195 26.04671 C
66.35452 25.44094 66.08494 24.85049 65.83096 24.27676 c
65.57783 23.70302 65.34142 23.17011 65.12060 22.67631 c
64.90091 22.18280 64.72403 21.77575 64.59080 21.45628 C
63.03005 21.45628 L
@c
77.69849 33.54038 m
79.64532 33.54038 81.14258 33.16961 82.18998 32.42948 c
83.23654 31.68907 83.76038 30.58526 83.76038 29.11833 c
83.76038 28.31754 83.61666 27.63468 83.33036 27.06718 c
83.04378 26.50082 82.63049 26.04047 82.09020 25.68756 c
81.54992 25.33351 80.89285 25.07754 80.11928 24.91710 c
79.34570 24.75666 78.47206 24.67644 77.49836 24.67644 c
75.95745 24.67644 L
75.95745 19.53524 L
74.01685 19.53524 L
74.01685 33.19994 L
74.56450 33.33317 75.17452 33.42274 75.84831 33.46951 c
76.52183 33.51628 77.13836 33.54038 77.69849 33.54038 c
@c
77.85865 31.83902 m
77.03206 31.83902 76.39795 31.81918 75.95745 31.77950 C
75.95745 26.33726 L
77.41843 26.33726 l
78.08570 26.33726 78.68551 26.38091 79.21843 26.46737 c
79.75276 26.55383 80.20261 26.70066 80.56885 26.90787 C
80.93650 27.11395 81.21969 27.39713 81.41953 27.75742 c
81.61965 28.11770 81.71943 28.57805 81.71943 29.13817 c
81.71943 29.67222 81.61654 30.11159 81.40932 30.45827 c
81.20296 30.80494 80.92290 31.08189 80.56885 31.28910 c
80.21594 31.49546 79.80576 31.63918 79.33946 31.71912 c
78.87175 31.79934 78.37824 31.83902 77.85865 31.83902 c
@c
94.30753 21.21562 m
94.30753 19.53524 L
85.96460 19.53524 L
85.96460 33.39978 L
87.90520 33.39978 L
87.90520 21.21562 L
94.30753 21.21562 L
@c
96.13162 19.53524 m
96.13162 33.39978 L
104.59474 33.39978 L
104.59474 31.73896 L
98.07250 31.73896 L
98.07250 27.61795 L
103.87502 27.61795 L
103.87502 25.99682 L
98.07250 25.99682 L
98.07250 21.19578 L
105.09534 21.19578 L
105.09534 19.53524 L
96.13162 19.53524 L
@c
115.66261 19.53524 m
115.46277 19.93493 115.22211 20.37855 114.94205 20.86583 c
114.66198 21.35197 114.35584 21.85909 114.02164 22.38605 c
113.68857 22.91272 113.34161 23.43969 112.98161 23.96636 c
112.62132 24.49332 112.27436 24.98995 111.94129 25.45739 C
111.60822 24.98995 111.26154 24.49332 110.90126 23.96636 c
110.54098 23.43969 110.19742 22.91272 109.87030 22.38605 c
109.54346 21.85909 109.23732 21.35197 108.94989 20.86583 C
108.66359 20.37855 108.42009 19.93493 108.21997 19.53524 C
106.07924 19.53524 L
106.67906 20.70850 107.37666 21.90274 108.17008 23.11569 c
108.96350 24.32976 109.80680 25.57729 110.70113 26.85798 C
106.25953 33.39978 L
108.50003 33.39978 L
111.92145 28.23846 L
115.30233 33.39978 L
117.52328 33.39978 L
113.16161 26.93820 L
114.06841 25.64391 114.92220 24.38306 115.72299 23.15650 C
116.52265 21.92882 117.22961 20.72211 117.84274 19.53524 C
115.66261 19.53524 L
@c
119.74706 33.39978 m
121.68794 33.39978 L
121.68794 19.53524 L
119.74706 19.53524 L
119.74706 33.39978 L
@c
134.17597 33.39978 m
134.17597 31.71912 L
129.81458 31.71912 L
129.81458 19.53524 L
127.87370 19.53524 L
127.87370 31.71912 L
123.51203 31.71912 L
123.51203 33.39978 L
134.17597 33.39978 L
@c
139.30072 19.53524 m
139.30072 25.09710 L
138.38031 26.52378 137.51320 27.93146 136.69994 29.31817 c
135.88668 30.70517 135.11934 32.06608 134.39877 33.39978 C
136.68009 33.39978 L
137.18721 32.30646 137.75357 31.19556 138.38031 30.06907 c
139.00734 28.94145 139.65392 27.85748 140.32120 26.81717 C
140.97515 27.85748 141.61550 28.94145 142.24224 30.06907 c
142.86898 31.19556 143.44157 32.30646 143.96230 33.39978 C
146.12287 33.39978 L
145.40343 32.06608 144.63609 30.70942 143.82283 29.32866 c
143.00844 27.94791 142.14841 26.55071 141.24161 25.13679 C
141.24161 19.53524 L
139.30072 19.53524 L
@c
160.83184 26.35710 m
162.77272 26.35710 L
162.77272 19.87569 L
162.61342 19.82154 162.38324 19.76202 162.08220 19.69540 c
161.78230 19.62879 161.43562 19.56217 161.04217 19.49556 c
160.64844 19.42894 160.21843 19.37169 159.75213 19.32491 c
159.28469 19.27786 158.81187 19.25518 158.33197 19.25518 c
157.35742 19.25518 156.47131 19.41534 155.67052 19.73509 c
154.87002 20.05569 154.18375 20.52227 153.61002 21.13540 c
153.03628 21.74882 152.59266 22.50255 152.27943 23.39603 c
151.96592 24.29036 151.80888 25.31679 151.80888 26.47786 c
151.80888 27.63780 151.98576 28.66847 152.33981 29.56819 C
152.69272 30.46876 153.16951 31.22561 153.77046 31.83902 c
154.36998 32.45216 155.07411 32.91987 155.88085 33.23934 c
156.68787 33.56022 157.55102 33.71924 158.47143 33.71924 c
159.09817 33.71924 159.65518 33.67984 160.14246 33.59962 c
160.62888 33.51940 161.04529 33.42671 161.39197 33.31956 C
161.73978 33.21326 162.02296 33.10611 162.24265 32.99981 c
162.46233 32.89266 162.61342 32.81244 162.69250 32.75943 C
162.07285 31.13943 L
161.68564 31.39228 161.17228 31.60261 160.53194 31.76929 c
159.89159 31.93569 159.23877 32.01902 158.57121 32.01902 c
157.86425 32.01902 157.22079 31.89203 156.64110 31.63918 c
156.06113 31.38605 155.56762 31.01839 155.16028 30.53849 c
154.75323 30.05858 154.43688 29.47550 154.20983 28.78838 c
153.98391 28.10098 153.87024 27.33052 153.87024 26.47786 c
153.87024 25.65014 153.96605 24.89726 154.15994 24.21638 c
154.35354 23.53635 154.64721 22.95326 155.04066 22.46598 c
155.43411 21.97871 155.92054 21.60283 156.50050 21.33524 C
157.08132 21.06879 157.76447 20.93556 158.55165 20.93556 c
159.11178 20.93556 159.58857 20.96589 159.98230 21.02627 c
160.37575 21.08551 160.65893 21.14277 160.83184 21.19578 C
160.83184 26.35710 L
@c
172.37877 25.33663 m
172.59222 25.07017 172.86293 24.72038 173.18976 24.28724 C
173.51575 23.85298 173.85307 23.37307 174.19975 22.84611 c
174.54643 22.31943 174.88998 21.76951 175.23043 21.19578 c
175.57002 20.62205 175.86057 20.06816 176.09981 19.53524 C
173.98006 19.53524 L
173.71247 20.04208 173.42306 20.55543 173.10954 21.07616 c
172.79631 21.59575 172.47855 22.09238 172.15909 22.56605 c
171.83934 23.03972 171.52186 23.48334 171.20835 23.89663 c
170.89483 24.31020 170.61165 24.67020 170.35880 24.97635 C
170.18476 24.96387 170.00787 24.95679 169.82787 24.95679 c
169.64872 24.95679 169.46447 24.95679 169.27795 24.95679 c
167.53720 24.95679 L
167.53720 19.53524 L
165.59631 19.53524 L
165.59631 33.19994 L
166.14397 33.33317 166.75427 33.42274 167.42778 33.46951 c
168.10157 33.51628 168.71783 33.54038 169.27795 33.54038 c
171.22507 33.54038 172.70872 33.17272 173.72920 32.43969 c
174.74939 31.70580 175.25962 30.61247 175.25962 29.15802 c
175.25962 28.23846 175.01698 27.45128 174.52970 26.79761 c
174.04243 26.14365 173.32611 25.65751 172.37877 25.33663 C
@c
169.43839 31.83902 m
168.61153 31.83902 167.97742 31.81918 167.53720 31.77950 C
167.53720 26.55694 L
168.91767 26.55694 l
169.58523 26.55694 170.18476 26.59039 170.71909 26.65786 c
171.25200 26.72476 171.70186 26.85061 172.06951 27.03798 c
172.43603 27.22450 172.71921 27.48784 172.91906 27.82828 c
173.11890 28.16759 173.21896 28.61858 173.21896 29.17871 c
173.21896 29.69830 173.11890 30.13257 172.91906 30.47924 c
172.71921 30.82592 172.44935 31.09861 172.10891 31.29874 c
171.76847 31.49943 171.36879 31.63918 170.90844 31.71912 c
170.44838 31.79934 169.95798 31.83902 169.43839 31.83902 c
@c
177.40346 26.47786 m
177.40346 27.66472 177.58063 28.71128 177.93439 29.61808 c
178.28759 30.52488 178.76750 31.28202 179.37439 31.88891 c
179.98157 32.49609 180.68854 32.95304 181.49528 33.25918 c
182.30230 33.56646 183.15921 33.71924 184.06602 33.71924 c
184.95950 33.71924 185.80394 33.56646 186.59735 33.25918 c
187.39077 32.95304 188.08724 32.49609 188.68791 31.88891 c
189.28772 31.28202 189.76450 30.52488 190.11855 29.61808 c
190.47146 28.71128 190.64863 27.66472 190.64863 26.47786 c
190.64863 25.29099 190.47146 24.24331 190.11855 23.33650 c
189.76450 22.42970 189.28772 21.67285 188.68791 21.06567 c
188.08724 20.45877 187.39077 20.00154 186.59735 19.69540 c
185.80394 19.38841 184.95950 19.23534 184.06602 19.23534 c
183.15921 19.23534 182.30230 19.38841 181.49528 19.69540 c
180.68854 20.00154 179.98157 20.45877 179.37439 21.06567 c
178.76750 21.67285 178.28759 22.42970 177.93439 23.33650 c
177.58063 24.24331 177.40346 25.29099 177.40346 26.47786 c
@c
179.44413 26.47786 m
179.44413 25.63767 179.55156 24.87345 179.76501 24.18605 c
179.97846 23.50006 180.28148 22.91584 180.67493 22.43594 c
181.06838 21.95603 181.54857 21.58639 182.11606 21.32589 c
182.68243 21.06567 183.31965 20.93556 184.02661 20.93556 c
184.73357 20.93556 185.36655 21.06567 185.92668 21.32589 c
186.48680 21.58639 186.96387 21.95603 187.35732 22.43594 c
187.75106 22.91584 188.05380 23.50006 188.26724 24.18605 c
188.48069 24.87345 188.58813 25.63767 188.58813 26.47786 c
188.58813 27.31805 188.48069 28.08142 188.26724 28.76854 c
188.05380 29.45452 187.75106 30.03874 187.35732 30.51865 c
186.96387 30.99883 186.48680 31.36932 185.92668 31.62869 c
185.36655 31.88891 184.73357 32.01902 184.02661 32.01902 c
183.31965 32.01902 182.68243 31.88891 182.11606 31.62869 C
181.54857 31.36932 181.06838 30.99883 180.67493 30.51865 c
180.28148 30.03874 179.97846 29.45452 179.76501 28.76854 c
179.55156 28.08142 179.44413 27.31805 179.44413 26.47786 c
@c
198.47424 19.23534 m
197.56743 19.23534 196.78025 19.37480 196.11383 19.65487 c
195.44655 19.93493 194.89975 20.31931 194.47285 20.80545 c
194.04595 21.29272 193.72961 21.86957 193.52239 22.53600 C
193.31603 23.20328 193.21200 23.92271 193.21200 24.69628 c
193.21200 33.39978 L
195.15288 33.39978 L
195.15288 24.91710 l
195.15288 23.53011 195.45987 22.52239 196.07329 21.89565 c
196.68643 21.26863 197.48721 20.95540 198.47424 20.95540 c
198.96775 20.95540 199.41761 21.03250 199.82466 21.18557 c
200.23172 21.33950 200.58151 21.57591 200.87518 21.89565 c
201.16885 22.21625 201.39477 22.62643 201.55521 23.12617 c
201.71537 23.62592 201.79559 24.22375 201.79559 24.91710 c
201.79559 33.39978 L
203.73647 33.39978 L
203.73647 24.69628 l
203.73647 23.92271 203.63244 23.20328 203.42608 22.53600 C
203.21887 21.86957 202.89940 21.29272 202.46513 20.80545 c
202.03200 20.31931 201.48548 19.93493 200.82529 19.65487 c
200.16510 19.37480 199.38104 19.23534 198.47424 19.23534 c
@c
210.54161 33.54038 m
212.48872 33.54038 213.98598 33.16961 215.03339 32.42948 c
216.07994 31.68907 216.60350 30.58526 216.60350 29.11833 c
216.60350 28.31754 216.45978 27.63468 216.17348 27.06718 c
215.88718 26.50082 215.47389 26.04047 214.93361 25.68756 c
214.39304 25.33351 213.73597 25.07754 212.96239 24.91710 c
212.18882 24.75666 211.31518 24.67644 210.34176 24.67644 c
208.80085 24.67644 L
208.80085 19.53524 L
206.85997 19.53524 L
206.85997 33.19994 L
207.40762 33.33317 208.01792 33.42274 208.69143 33.46951 c
209.36523 33.51628 209.98148 33.54038 210.54161 33.54038 c
@c
210.70205 31.83902 m
209.87546 31.83902 209.24135 31.81918 208.80085 31.77950 C
208.80085 26.33726 L
210.26154 26.33726 l
210.92910 26.33726 211.52863 26.38091 212.06183 26.46737 c
212.59587 26.55383 213.04573 26.70066 213.41225 26.90787 C
213.77991 27.11395 214.06309 27.39713 214.26293 27.75742 c
214.46277 28.11770 214.56283 28.57805 214.56283 29.13817 c
214.56283 29.67222 214.45965 30.11159 214.25244 30.45827 c
214.04636 30.80494 213.76630 31.08189 213.41225 31.28910 c
213.05934 31.49546 212.64917 31.63918 212.18258 31.71912 c
211.71515 31.79934 211.22164 31.83902 210.70205 31.83902 c
@c
F

@rax %Note: Object
28.56841 40.51644 195.46611 55.00035 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
39.39165 40.81606 m
39.16460 41.41587 38.95115 42.00633 38.75131 42.58715 c
38.55146 43.16712 38.34425 43.75757 38.13080 44.35739 C
31.84923 44.35739 L
30.58838 40.81606 L
28.56841 40.81606 L
29.10161 42.28328 29.60135 43.64107 30.06879 44.88718 C
30.53537 46.13471 30.99231 47.31846 31.43906 48.43871 c
31.88580 49.55924 32.32913 50.62961 32.76964 51.64980 c
33.21014 52.67027 33.67020 53.68025 34.15039 54.68088 C
35.93083 54.68088 L
36.41074 53.68025 36.87109 52.67027 37.31131 51.64980 c
37.75068 50.62961 38.19430 49.55924 38.64104 48.43871 c
39.08863 47.31846 39.54472 46.13471 40.01216 44.88718 c
40.47874 43.64107 40.97849 42.28328 41.51254 40.81606 C
39.39165 40.81606 L
@c
37.57068 45.95754 m
37.14491 47.11861 36.72113 48.24198 36.30047 49.32907 c
35.88066 50.41616 35.44356 51.45931 34.99058 52.45994 C
34.52315 51.45931 34.07953 50.41616 33.66000 49.32907 c
33.23934 48.24198 32.82265 47.11861 32.40935 45.95754 C
37.57068 45.95754 L
@c
51.51969 42.49672 m
51.51969 40.81606 L
43.17647 40.81606 L
43.17647 54.68088 L
45.11735 54.68088 L
45.11735 42.49672 L
51.51969 42.49672 L
@c
61.80661 47.63820 m
63.74750 47.63820 L
63.74750 41.15679 L
63.58819 41.10265 63.35802 41.04312 63.05698 40.97650 c
62.75707 40.90989 62.41039 40.84328 62.01694 40.77666 c
61.62321 40.71005 61.19320 40.65279 60.72690 40.60573 c
60.25946 40.55896 59.78665 40.53600 59.30674 40.53600 c
58.33219 40.53600 57.44608 40.69644 56.64529 41.01619 c
55.84479 41.33679 55.15852 41.80337 54.58479 42.41650 c
54.01106 43.02964 53.56772 43.78365 53.25420 44.67685 c
52.94069 45.57146 52.78365 46.59789 52.78365 47.75896 c
52.78365 48.91890 52.96054 49.94957 53.31458 50.84929 C
53.66750 51.74986 54.14428 52.50671 54.74523 53.12013 c
55.34504 53.73326 56.04888 54.20069 56.85562 54.52044 c
57.66265 54.84104 58.52580 55.00035 59.44620 55.00035 c
60.07294 55.00035 60.62995 54.96094 61.11723 54.88072 c
61.60365 54.80050 62.02006 54.70781 62.36674 54.60066 C
62.71455 54.49436 62.99773 54.38721 63.21742 54.28091 c
63.43710 54.17376 63.58819 54.09354 63.66728 54.04054 C
63.04762 52.42025 L
62.66041 52.67339 62.14706 52.88372 61.50671 53.05039 c
60.86636 53.21679 60.21354 53.30013 59.54627 53.30013 c
58.83931 53.30013 58.19584 53.17313 57.61587 52.92000 c
57.03591 52.66715 56.54239 52.29950 56.13506 51.81959 c
55.72800 51.33969 55.41165 50.75660 55.18460 50.06920 c
54.95868 49.38208 54.84501 48.61162 54.84501 47.75896 c
54.84501 46.93124 54.94082 46.17836 55.13471 45.49748 c
55.32831 44.81745 55.62198 44.23436 56.01543 43.74709 c
56.40917 43.25981 56.89531 42.88394 57.47528 42.61635 C
58.05609 42.34989 58.73924 42.21666 59.52643 42.21666 c
60.08655 42.21666 60.56334 42.24671 60.95707 42.30709 c
61.35052 42.36661 61.63370 42.42387 61.80661 42.47688 C
61.80661 47.63820 L
@c
66.01096 47.75896 m
66.01096 48.94583 66.18784 49.99238 66.54189 50.89918 c
66.89480 51.80598 67.37499 52.56312 67.98189 53.17002 c
68.58907 53.77691 69.29603 54.23414 70.10277 54.54028 c
70.90980 54.84728 71.76671 55.00035 72.67351 55.00035 c
73.56699 55.00035 74.41143 54.84728 75.20485 54.54028 c
75.99798 54.23414 76.69474 53.77691 77.29540 53.17002 c
77.89521 52.56312 78.37200 51.80598 78.72605 50.89918 c
79.07896 49.99238 79.25613 48.94583 79.25613 47.75896 c
79.25613 46.57181 79.07896 45.52441 78.72605 44.61761 c
78.37200 43.71080 77.89521 42.95367 77.29540 42.34677 c
76.69474 41.73959 75.99798 41.28265 75.20485 40.97650 c
74.41143 40.66951 73.56699 40.51644 72.67351 40.51644 c
71.76671 40.51644 70.90980 40.66951 70.10277 40.97650 c
69.29603 41.28265 68.58907 41.73959 67.98189 42.34677 c
67.37499 42.95367 66.89480 43.71080 66.54189 44.61761 c
66.18784 45.52441 66.01096 46.57181 66.01096 47.75896 c
@c
68.05162 47.75896 m
68.05162 46.91877 68.15906 46.15455 68.37250 45.46715 c
68.58595 44.78117 68.88869 44.19694 69.28243 43.71704 c
69.67587 43.23685 70.15606 42.86721 70.72328 42.60699 c
71.28992 42.34677 71.92715 42.21666 72.63411 42.21666 c
73.34107 42.21666 73.97405 42.34677 74.53417 42.60699 c
75.09430 42.86721 75.57137 43.23685 75.96482 43.71704 c
76.35827 44.19694 76.66129 44.78117 76.87474 45.46715 c
77.08819 46.15455 77.19562 46.91877 77.19562 47.75896 c
77.19562 48.59915 77.08819 49.36224 76.87474 50.04964 c
76.66129 50.73562 76.35827 51.31984 75.96482 51.79975 c
75.57137 52.27965 75.09430 52.65043 74.53417 52.90980 c
73.97405 53.17002 73.34107 53.30013 72.63411 53.30013 c
71.92715 53.30013 71.28992 53.17002 70.72328 52.90980 C
70.15606 52.65043 69.67587 52.27965 69.28243 51.79975 c
68.88869 51.31984 68.58595 50.73562 68.37250 50.04964 c
68.15906 49.36224 68.05162 48.59915 68.05162 47.75896 c
@c
88.70173 46.61773 m
88.91518 46.35128 89.18589 46.00148 89.51301 45.56835 C
89.83871 45.13408 90.17603 44.65417 90.52271 44.12721 c
90.86967 43.60025 91.21323 43.05061 91.55367 42.47688 c
91.89298 41.90315 92.18353 41.34926 92.42306 40.81606 C
90.30302 40.81606 L
90.03543 41.32318 89.74602 41.83654 89.43279 42.35726 c
89.11928 42.87685 88.80180 43.37348 88.48205 43.84715 c
88.16230 44.32082 87.84482 44.76444 87.53159 45.17773 c
87.21808 45.59102 86.93490 45.95131 86.68176 46.25745 C
86.50800 46.24498 86.33083 46.23761 86.15083 46.23761 c
85.97169 46.23761 85.78743 46.23761 85.60120 46.23761 c
83.86016 46.23761 L
83.86016 40.81606 L
81.91928 40.81606 L
81.91928 54.48076 L
82.46721 54.61427 83.07723 54.70356 83.75074 54.75061 c
84.42454 54.79739 85.04079 54.82148 85.60120 54.82148 c
87.54803 54.82148 89.03197 54.45383 90.05216 53.72079 c
91.07263 52.98661 91.58287 51.89357 91.58287 50.43883 c
91.58287 49.51956 91.34022 48.73238 90.85294 48.07843 c
90.36567 47.42476 89.64935 46.93833 88.70173 46.61773 C
@c
85.76135 53.12013 m
84.93477 53.12013 84.30066 53.10028 83.86016 53.06060 C
83.86016 47.83805 L
85.24091 47.83805 l
85.90819 47.83805 86.50800 47.87121 87.04205 47.93896 c
87.57524 48.00557 88.02510 48.13172 88.39247 48.31909 c
88.75899 48.50532 89.04217 48.76894 89.24230 49.10939 c
89.44214 49.44869 89.54192 49.89969 89.54192 50.45981 c
89.54192 50.97940 89.44214 51.41339 89.24230 51.76035 c
89.04217 52.10702 88.77260 52.37972 88.43216 52.57956 c
88.09172 52.78054 87.69175 52.92000 87.23169 53.00022 c
86.77134 53.08044 86.28094 53.12013 85.76135 53.12013 c
@c
94.28683 54.68088 m
96.22743 54.68088 L
96.22743 40.81606 L
94.28683 40.81606 L
94.28683 54.68088 L
@c
108.71575 54.68088 m
108.71575 53.00022 L
104.35408 53.00022 L
104.35408 40.81606 L
102.41320 40.81606 L
102.41320 53.00022 L
98.05181 53.00022 L
98.05181 54.68088 L
108.71575 54.68088 L
@c
119.26205 54.68088 m
121.20265 54.68088 L
121.20265 40.81606 L
119.26205 40.81606 L
119.26205 47.21839 L
112.47959 47.21839 L
112.47959 40.81606 L
110.53871 40.81606 L
110.53871 54.68088 L
112.47959 54.68088 L
112.47959 48.89906 L
119.26205 48.89906 L
119.26205 54.68088 L
@c
130.64967 42.73710 m
130.51616 43.05685 130.34041 43.46391 130.11959 43.95742 c
129.89991 44.45093 129.66236 44.98413 129.40951 45.55786 c
129.15638 46.13159 128.88567 46.72176 128.59937 47.32781 c
128.31194 47.93499 128.04236 48.50844 127.78951 49.04901 c
127.53524 49.58929 127.29912 50.07231 127.07830 50.49921 c
126.85861 50.92611 126.68145 51.25323 126.54822 51.48000 C
126.40139 49.90592 126.28176 48.20258 126.18794 46.36772 c
126.09524 44.53427 126.01531 42.68296 125.94841 40.81606 C
124.04721 40.81606 L
124.10135 42.01682 124.16088 43.22665 124.22750 44.44781 c
124.29411 45.66813 124.37121 46.86860 124.45767 48.04838 c
124.54498 49.22901 124.63767 50.37959 124.73773 51.49984 c
124.83751 52.62038 124.94806 53.68025 125.06769 54.68088 C
126.76904 54.68088 L
127.12932 54.09354 127.51569 53.40019 127.92898 52.60054 c
128.34227 51.79975 128.75556 50.96268 129.16885 50.08904 c
129.58328 49.21540 129.98324 48.34205 130.36961 47.46841 c
130.75682 46.59477 131.10973 45.79824 131.43033 45.07795 C
131.75008 45.79824 132.10413 46.59477 132.49049 47.46841 c
132.87770 48.34205 133.27767 49.21540 133.69096 50.08904 c
134.10425 50.96268 134.51754 51.79975 134.93083 52.60054 c
135.34441 53.40019 135.73162 54.09354 136.09191 54.68088 C
137.79213 54.68088 L
138.24624 50.21291 138.58554 45.59102 138.81260 40.81606 C
136.91225 40.81606 L
136.84564 42.68296 136.76542 44.53427 136.67187 46.36772 c
136.57805 48.20258 136.45843 49.90592 136.31159 51.48000 C
136.17836 51.25323 136.00120 50.92611 135.78151 50.49921 c
135.56183 50.07231 135.32457 49.58929 135.07143 49.04901 c
134.81745 48.50844 134.54787 47.93499 134.26157 47.32781 C
133.97414 46.72176 133.70457 46.13159 133.45030 45.55786 c
133.19745 44.98413 132.96104 44.45093 132.74022 43.95742 c
132.52054 43.46391 132.34365 43.05685 132.21043 42.73710 C
130.64967 42.73710 L
@c
144.85776 42.19682 m
146.88482 42.19682 147.89906 42.89017 147.89906 44.27717 c
147.89906 44.70406 147.80863 45.06746 147.62835 45.36737 c
147.44835 45.66813 147.20570 45.92750 146.89843 46.14803 c
146.59143 46.36772 146.24135 46.55849 145.84791 46.71780 c
145.45446 46.87795 145.03776 47.03839 144.59754 47.19883 C
144.09128 47.37146 143.61052 47.56847 143.15754 47.78816 c
142.70343 48.00869 142.30998 48.26920 141.97663 48.56882 c
141.64356 48.86872 141.38022 49.22589 141.18661 49.63918 c
140.99272 50.05276 140.89691 50.55250 140.89691 51.13956 c
140.89691 52.35364 141.31049 53.30013 142.13707 53.98016 c
142.96394 54.66104 144.10403 55.00035 145.55849 55.00035 c
146.39868 55.00035 147.16205 54.91077 147.84917 54.73077 c
148.53515 54.55049 149.03915 54.35376 149.35890 54.14031 C
148.73924 52.56000 L
148.45918 52.73376 148.04164 52.90356 147.48888 53.06995 c
146.93499 53.23663 146.29153 53.31997 145.55849 53.31997 c
145.18460 53.31997 144.83792 53.28028 144.51732 53.20006 c
144.19757 53.12013 143.91751 53.00022 143.67713 52.84006 c
143.43761 52.67962 143.24712 52.47666 143.10737 52.22976 c
142.96706 51.98315 142.89704 51.69345 142.89704 51.35924 c
142.89704 50.98649 142.97017 50.67326 143.11672 50.41928 c
143.26356 50.16614 143.47077 49.94220 143.73751 49.74860 c
144.00397 49.55613 144.31436 49.37896 144.66813 49.21852 c
145.02132 49.05921 145.41165 48.89906 145.83855 48.73861 C
146.43836 48.49909 146.98913 48.25871 147.48888 48.01805 c
147.98863 47.77880 148.42290 47.49137 148.78942 47.15802 c
149.15594 46.82494 149.43912 46.42838 149.63896 45.96803 c
149.83994 45.50769 149.93972 44.95068 149.93972 44.29701 c
149.93972 43.08378 149.49638 42.15005 148.60913 41.49609 c
147.72217 40.84328 146.47153 40.51644 144.85776 40.51644 c
144.31124 40.51644 143.80724 40.55272 143.34690 40.62557 c
142.88683 40.69956 142.47751 40.78602 142.11723 40.88608 c
141.75694 40.98586 141.44683 41.09301 141.18661 41.20668 c
140.92611 41.32006 140.72315 41.41587 140.57631 41.49609 C
141.15628 43.09739 L
141.46356 42.92362 141.92986 42.73002 142.55660 42.51657 c
143.18362 42.30312 143.95096 42.19682 144.85776 42.19682 c
@c
165.94838 40.81606 m
165.72132 41.41587 165.50787 42.00633 165.30803 42.58715 c
165.10791 43.16712 164.90069 43.75757 164.68724 44.35739 C
158.40567 44.35739 L
157.14482 40.81606 L
155.12485 40.81606 L
155.65805 42.28328 156.15780 43.64107 156.62523 44.88718 C
157.09181 46.13471 157.54876 47.31846 157.99550 48.43871 c
158.44224 49.55924 158.88586 50.62961 159.32636 51.64980 c
159.76658 52.67027 160.22693 53.68025 160.70683 54.68088 C
162.48728 54.68088 L
162.96718 53.68025 163.42753 52.67027 163.86803 51.64980 c
164.30740 50.62961 164.75074 49.55924 165.19748 48.43871 c
165.64535 47.31846 166.10117 46.13471 166.56888 44.88718 c
167.03518 43.64107 167.53493 42.28328 168.06926 40.81606 C
165.94838 40.81606 L
@c
164.12712 45.95754 m
163.70135 47.11861 163.27757 48.24198 162.85691 49.32907 c
162.43739 50.41616 162.00000 51.45931 161.54702 52.45994 C
161.07959 51.45931 160.63597 50.41616 160.21644 49.32907 c
159.79578 48.24198 159.37937 47.11861 158.96608 45.95754 C
164.12712 45.95754 L
@c
179.23691 40.81606 m
178.94353 41.30986 178.60620 41.86375 178.22608 42.47688 c
177.84595 43.09030 177.43578 43.72724 176.99641 44.38743 c
176.55591 45.04762 176.09896 45.71802 175.62501 46.39805 c
175.15247 47.07808 174.68192 47.73487 174.21534 48.36898 C
173.74791 49.00195 173.29493 49.59865 172.85443 50.15877 c
172.41420 50.71890 172.00800 51.21241 171.63411 51.63931 C
171.63411 40.81606 L
169.73291 40.81606 L
169.73291 54.68088 L
171.27383 54.68088 L
171.90085 54.01332 172.57124 53.23663 173.28444 52.34967 c
173.99764 51.46356 174.70460 50.54939 175.40532 49.60913 c
176.10520 48.66888 176.76624 47.74535 177.38589 46.83855 c
178.00639 45.93146 178.52995 45.12472 178.95685 44.41776 C
178.95685 54.68088 L
180.85720 54.68088 L
180.85720 40.81606 L
179.23691 40.81606 L
@c
195.46611 47.75896 m
195.46611 46.55849 195.27874 45.51420 194.90598 44.62696 C
194.53238 43.74085 194.00542 43.00696 193.32539 42.42699 c
192.64564 41.84702 191.83124 41.41276 190.88504 41.12646 c
189.93742 40.83902 188.89739 40.69644 187.76353 40.69644 c
187.20312 40.69644 186.58687 40.71940 185.91307 40.76617 c
185.23956 40.81294 184.62954 40.90252 184.08161 41.03575 C
184.08161 54.48076 L
184.62954 54.61427 185.23956 54.70356 185.91307 54.75061 c
186.58687 54.79739 187.20312 54.82148 187.76353 54.82148 c
188.89739 54.82148 189.93742 54.67776 190.88504 54.39033 c
191.83124 54.10403 192.64564 53.67090 193.32539 53.08980 c
194.00542 52.50983 194.53238 51.77679 194.90598 50.88983 c
195.27874 50.00258 195.46611 48.95943 195.46611 47.75896 c
@c
187.92369 42.39666 m
189.76450 42.39666 191.13789 42.86721 192.04469 43.80746 c
192.95178 44.74772 193.40561 46.06498 193.40561 47.75896 c
193.40561 49.45181 192.95178 50.76907 192.04469 51.71017 c
191.13789 52.65043 189.76450 53.12013 187.92369 53.12013 c
187.37717 53.12013 186.95339 53.11389 186.65348 53.10028 c
186.35272 53.08668 186.14324 53.07307 186.02249 53.06060 C
186.02249 42.45704 L
186.14324 42.44372 186.35272 42.43011 186.65348 42.41650 c
186.95339 42.40290 187.37717 42.39666 187.92369 42.39666 c
@c
F

@rax %Note: Object
28.74217 66.95348 108.63411 110.76151 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
48.86901 76.28428 m
50.12022 76.28428 51.31389 76.31065 52.45115 76.36337 c
53.58813 76.41609 54.49776 76.49518 55.18035 76.60063 C
55.18035 85.53628 L
54.66813 85.64173 53.90079 85.74718 52.87748 85.85263 c
51.85417 85.95808 50.91591 86.01080 50.06324 86.01080 c
48.86901 86.01080 47.74620 85.94476 46.69398 85.81294 c
45.64233 85.68113 44.71880 85.43083 43.92227 85.06148 c
43.12630 84.69241 42.50098 84.19181 42.04630 83.55912 c
41.59134 82.92671 41.36400 82.13584 41.36400 81.18709 c
41.36400 79.34173 42.03241 78.06359 43.36838 77.35153 c
44.70435 76.64003 46.53808 76.28428 48.86901 76.28428 c
@c
47.84570 110.76151 m
51.59820 110.76151 54.72510 110.36636 57.22696 109.57521 c
59.72854 108.78435 61.73263 107.65106 63.23981 106.17506 C
64.74643 104.69877 65.81254 102.90643 66.43786 100.79802 c
67.06318 98.68904 67.37584 96.34337 67.37584 93.75987 c
67.37584 69.24643 L
65.55628 68.87735 63.02636 68.44280 59.78523 67.94164 c
56.54466 67.44076 52.62151 67.19046 48.01606 67.19046 c
45.11679 67.19046 42.48709 67.42772 40.12724 67.90224 c
37.76797 68.37647 35.73524 69.15430 34.02964 70.23487 c
32.32375 71.31543 31.01613 72.72595 30.10649 74.46529 c
29.19685 76.20520 28.74217 78.34025 28.74217 80.87074 c
28.74217 83.29550 29.26772 85.35146 30.31937 87.03865 C
31.37159 88.72554 32.77843 90.06973 34.54129 91.07178 c
36.30387 92.07326 38.32214 92.79808 40.59666 93.24624 c
42.87061 93.69439 45.23046 93.91805 47.67506 93.91805 c
49.32369 93.91805 50.78778 93.85257 52.06706 93.72076 c
53.34661 93.58894 54.38409 93.41745 55.18035 93.20655 C
55.18035 94.31348 l
55.18035 96.31701 54.52611 97.92482 53.21849 99.13720 c
51.91087 100.34986 49.63635 100.95619 46.39578 100.95619 c
44.23493 100.95619 42.10299 100.81106 39.99969 100.52107 c
37.89553 100.23109 36.07654 99.82233 34.54129 99.29537 C
32.92072 108.78435 L
33.65972 108.99524 34.58381 109.21946 35.69244 109.45672 c
36.80135 109.69398 38.00948 109.90488 39.31739 110.08942 c
40.62501 110.27367 42.00378 110.43184 43.45370 110.56365 c
44.90334 110.69546 46.36743 110.76151 47.84570 110.76151 c
@c
72.38806 88.85735 m
72.38806 91.86236 72.91361 94.69587 73.96583 97.35789 C
75.01748 100.02019 76.53827 102.33978 78.52847 104.31694 c
80.51811 106.29354 82.93493 107.86195 85.77751 109.02161 c
88.62038 110.18183 91.86094 110.76151 95.50006 110.76151 c
97.88825 110.76151 100.07688 110.56365 102.06680 110.16850 c
104.05701 109.77307 105.98995 109.20614 107.86620 108.46828 C
105.22261 99.05811 L
104.02866 99.47962 102.72047 99.84869 101.29918 100.16504 c
99.87789 100.48167 98.28624 100.63984 96.52337 100.63984 c
92.77115 100.63984 89.97080 99.55871 88.12290 97.39757 C
86.27499 95.23587 85.35118 92.38932 85.35118 88.85735 c
85.35118 85.11420 86.21830 82.21493 87.95225 80.15868 c
89.68620 78.10299 92.71417 77.07515 97.03502 77.07515 c
98.57055 77.07515 100.21918 77.20696 101.98148 77.47030 c
103.74435 77.73392 105.36463 78.15572 106.84290 78.73540 C
108.63411 69.08825 L
107.15556 68.50828 105.30765 68.00769 103.09011 67.58589 c
100.87285 67.16409 98.42825 66.95348 95.75575 66.95348 c
91.66195 66.95348 88.13735 67.51984 85.18054 68.65370 c
82.22428 69.78699 79.79357 71.32904 77.88869 73.27928 c
75.98409 75.22980 74.59115 77.53606 73.70957 80.19865 c
72.82828 82.86066 72.38806 85.74718 72.38806 88.85735 c
@c
F

@rax %Note: Object
174.12406 99.76961 185.28151 133.02425 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.63 0.35 0.14 0.72 null ] set_fill_color
185.28151 99.76961 m
174.12406 99.76961 L
174.12406 133.02425 L
185.28151 133.02425 L
185.28151 99.76961 L
@c
F

@rax %Note: Object
137.38961 81.63213 148.52154 136.67017 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.63 0.35 0.14 0.72 null ] set_fill_color
148.52154 81.63213 m
137.38961 81.63213 L
137.38961 136.67017 L
148.52154 136.67017 L
148.52154 81.63213 L
@c
F

@rax %Note: Object
118.93861 88.98605 130.09663 125.41408 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.32 0.17 0.07 0.36 null ] set_fill_color
130.09663 88.98605 m
118.93861 88.98605 L
118.93861 125.41408 L
130.09663 125.41408 L
130.09663 88.98605 L
@c
F

@rax %Note: Object
155.79184 88.98576 166.94646 125.41380 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.63 0.35 0.14 0.72 null ] set_fill_color
166.94646 88.98576 m
155.79184 88.98576 L
155.79184 125.41380 L
166.94646 125.41380 L
166.94646 88.98576 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%EOF

